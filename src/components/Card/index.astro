---
import { Image } from 'astro:assets';
import image from '@/assets/images/background.webp';
import type { MdxImage } from './thumbnailType';
import { isMdxImage } from './thumbnailType';

interface Props {
  thumbnail?: string | MdxImage;
  title: string;
  href: string;
  date?: string;
  category?: string;
  tags?: string[];
  excerpt?: string;
}

const { thumbnail, title, href, date, category, tags, excerpt } = Astro.props;

const tag = category || tags?.[0];
// title に含まれるHTMLタグを削除
const titleText = title.replace(/<("[^"]*"|'[^']*'|[^'">])*>/g, ' ');
---

<li class="card">
  <a href={href}>
    <figure class="thumbnail">
      {thumbnail === undefined && <Image src={image} alt="thumbnail" />}
      {
        thumbnail && typeof thumbnail === 'string' && (
          <Image src={thumbnail} alt="thumbnail" width={320} height={180} />
        )
      }
      {
        thumbnail && isMdxImage(thumbnail) && (
          <Image src={thumbnail} alt="thumbnail" />
        )
      }
    </figure>
    <p class="title">{titleText}</p>
    <div class="meta">
      <time datetime={date}>{date}</time>
      {tag && <span>{tag}</span>}
    </div>
    <div class="excerpt" set:html={excerpt} />
  </a>
</li>

<style lang="scss">
  .thumbnail {
    width: 320px;
    height: 180px;
    overflow: hidden;
    box-shadow: 0 3px 10px rgb(0 0 0 / 20%);

    & > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s;
    }
  }

  .card {
    position: relative;
    z-index: 0;
    display: grid;
    grid-template-rows: auto auto auto 1fr;
    gap: 1rem;
    max-width: 23rem;
    overflow: hidden;

    &::before {
      position: absolute;
      inset: 0;
      z-index: -1;
      content: '';
      background-color: lighten(map-get($colors, 'white'), 40%);
      transition: transform 0.3s;
      transform: scale(0, 1);
      transform-origin: right top;
    }

    &:hover {
      &::before {
        transform: scale(1, 1);
        transform-origin: left top;
      }

      .thumbnail > img {
        transform: scale(1.1);
      }
    }

    & > a {
      display: grid;
      grid-template-rows: subgrid;
      grid-row: span 4;
      padding: 1.5rem;
      text-decoration: none;
    }
  }

  .title {
    overflow: hidden;
    font-size: 1.25rem;
    font-weight: bolder;
    color: map-get($colors, 'green');
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .meta {
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
    color: map-get($colors, 'black');
  }

  .excerpt {
    max-width: 100%;
    font-weight: bolder;
    color: map-get($colors, 'black');
  }
</style>

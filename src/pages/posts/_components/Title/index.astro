---
type Props = {
  title: string;
  createdAt: Date;
  updatedAt: Date;
  category: string;
  tags: string[];
};

const { title, createdAt, updatedAt, category, tags } = Astro.props;
---

<div class="container">
  <h2 class="title" set:html={title} />
  <ul class="category-and-tags">
    <div class="items">
      <li>
        <a href={`/portfolio/posts/category/${category}`}>
          {category}
        </a>
      </li>
      {
        tags.map((tag) => (
          <li>
            <a href={`/portfolio/posts/tag/${tag}`}>{tag}</a>
          </li>
        ))
      }
    </div>
  </ul>

  <p class="date">
    <time datetime={createdAt.toLocaleDateString()}>
      <span> 公開日：</span>
      <span>
        {createdAt.toLocaleDateString()}
      </span>
    </time>
    <time datetime={updatedAt.toLocaleDateString()}>
      <span> 最終更新日：</span>
      <span>
        {updatedAt.toLocaleDateString()}
      </span>
    </time>
  </p>
</div>

<style lang="scss">
  .container {
    padding: 4rem 1rem;
    color: map-get($colors, 'white');
    text-align: center;
    background-color: rgb(0 0 0 / 70%);
    @media screen and (width <= 768px) {
      padding: 3rem 1rem;
    }
  }

  .title {
    font-size: 2.5rem;
    @media screen and (width <= 768px) {
      font-size: 1.5rem;
    }
  }

  .date {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0.5rem;
    font-size: 0.75rem;

    time {
      display: grid;
      grid-template-columns: 7em 10em;
      justify-content: center;
      width: 100%;

      span:first-child {
        text-align: right;
      }
    }
  }

  .category-and-tags {
    max-width: 320px;
    margin: 0.5rem auto;
    font-size: 0.875rem;

    .items {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(6em, auto));
      column-gap: 0.5rem;
      justify-content: center;
    }
  }

  a {
    color: map-get($colors, 'white');
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }
</style>
